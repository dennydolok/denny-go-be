// Code generated by mockery v2.10.6. DO NOT EDIT.

package mocks

import (
	models "arc/models"

	mock "github.com/stretchr/testify/mock"
)

// UserService is an autogenerated mock type for the UserService type
type UserService struct {
	mock.Mock
}

// CreateUserService provides a mock function with given fields: user
func (_m *UserService) CreateUserService(user models.User) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUsersService provides a mock function with given fields:
func (_m *UserService) GetUsersService() []models.User {
	ret := _m.Called()

	var r0 []models.User
	if rf, ok := ret.Get(0).(func() []models.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.User)
		}
	}

	return r0
}

// LoginUser provides a mock function with given fields: email, password
func (_m *UserService) LoginUser(email string, password string) (string, int) {
	ret := _m.Called(email, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(string, string) int); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Get(1).(int)
	}

	return r0, r1
}
